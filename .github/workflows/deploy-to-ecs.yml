name: Deploy Trip Management to Amazon ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECS_CLUSTER: tripmgmt-cluster  
  CONTAINER_NAME: tripmgmt
  ECS_SERVICE: tripmgmt-task-service-dbbdq2vl
  ECS_TD: .github/workflows/tripmgmt-task-definition.json

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.17.0'
          cache: 'npm'
          cache-dependency-path: 'tripmgmt/tripmgmt/package-lock.json'

      - name: Install npm dependencies
        working-directory: ./tripmgmt/tripmgmt
        run: npm install

      
      - name: Build frontend
        working-directory: ./tripmgmt/tripmgmt
        run: npm run webapp:build:prod


      - name: Grant execute permission for gradlew
        run: chmod +x tripmgmt/tripmgmt/gradlew

      - name: Build with Gradle
        working-directory: ./tripmgmt/tripmgmt
        env:
          CI: true
          HUSKY: 0
          HUSKY_SKIP_INSTALL: true
          SKIP_HUSKY: true
        run: HUSKY=0 CI=true HUSKY_SKIP_INSTALL=true SKIP_HUSKY=true ./gradlew bootJar -Pprod --no-daemon

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: "891612582051.dkr.ecr.us-east-1.amazonaws.com"
          ECR_REPOSITORY: "comfortable-shark/tripmgmt"
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build --platform linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f tripmgmt/tripmgmt/Dockerfile tripmgmt/tripmgmt/
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "IMAGE=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def-1
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TD }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ env.IMAGE }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def-1.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: false